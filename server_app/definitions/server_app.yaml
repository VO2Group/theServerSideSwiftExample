swagger: '2.0'
info:
  version: 1.0.0
  title: server_app
schemes:
  - http
basePath: /api
consumes:
  - application/json
produces:
  - application/json
paths:
  '/creatures/{id}':
    get:
      tags:
        - creature
      summary: 'Find a model instance by {{id}}'
      operationId: creature.findOne
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/creature'
      deprecated: false
    put:
      tags:
        - creature
      summary: Put attributes for a model instance and persist it
      operationId: creature.replace
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: true
          schema:
            $ref: '#/definitions/creature'
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/creature'
      deprecated: false
    patch:
      tags:
        - creature
      summary: Patch attributes for a model instance and persist it
      operationId: creature.update
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: true
          schema:
            $ref: '#/definitions/creature'
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/creature'
      deprecated: false
    delete:
      tags:
        - creature
      summary: 'Delete a model instance by {{id}}'
      operationId: creature.delete
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
  /creatures:
    post:
      tags:
        - creature
      summary: Create a new instance of the model and persist it
      operationId: creature.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: true
          schema:
            $ref: '#/definitions/creature'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/creature'
      deprecated: false
    get:
      tags:
        - creature
      summary: Find all instances of the model
      operationId: creature.findAll
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/creature'
      deprecated: false
    delete:
      tags:
        - creature
      summary: Delete all instances of the model
      operationId: creature.deleteAll
      responses:
        '200':
          description: Request was successful
      deprecated: false
definitions:
  creature:
    properties:
      id:
        type: string
      name:
        type: string
      picture:
        type: string
    additionalProperties: false
    required:
      - name
